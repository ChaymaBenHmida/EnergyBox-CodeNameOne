package com.mycompany.piMobile;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.company.gui.HomeForm;
import com.mycompany.entities.Comment;
import com.mycompany.entities.Plat;
import com.mycompany.entities.Post;
import com.mycompany.entities.User;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {
    private Form current;
    private Resources theme;
              public static int idp;
    public static Post p = new Post();
    public static Comment c = new Comment();
    public static void modifidp(int id){
        idp = id;
    }
     public static int search = 0;
    public static int searchv = 0;
       public static Plat plat = new Plat();
    public static void updateplat(Plat p){
    plat = p;
    }
     public static int idU;
    public static String email = "";
    public static void modifIdU(String emaill){
        email = emaill;
    }
    public static User userC = new User();
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        new HomeForm().show();
        //new SignIn(theme).show();
    }
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }
 
    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);
        theme = UIManager.initFirstTheme("/theme");
        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);
        // Pro only feature
        Log.bindCrashProtection(true);
        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
   

   
}
